---
import Layout from '../layout/Layout.astro';
import { ResourceService } from '../services/ResourceService'
import { FormBuilder } from '../services/FormService'
import { actions } from 'astro:actions';

const start = parseInt(Astro.url.searchParams.get('start') || '0');
const search = Astro.url.searchParams.get('search') || '';
const limit = 5;

const userService = new ResourceService({
  baseUrl: 'https://jsonplaceholder.typicode.com/users',
  pagination: {
    pageField: '_start',
    limitField: '_limit',
    sortField: 'order',
    sortExp: '{prop},{sort}',
    sortAscChar: 'asc',
    sortDescChar: 'desc',
    filterField: '{prop}_like',
    filterExp: '{value}'
  },
});

const prevStart = Math.max(0, start - limit);
const nextStart = start + limit;

const { data:users } = await userService.getAll({
  pagination: { page: start, limit },
  filters: { email: search }
});

// Field definitions with metadata
const fields = [
  { name: 'id', type: 'number', label: 'ID', readonly: true },
  { name: 'name', type: 'text', label: 'Name', required: true },
  { name: 'email', type: 'email', label: 'Email', required: true },
  { name: 'company.name', type: 'text', label: 'Company' },
  { name: 'website', type: 'text', label: 'Website' },
  { name: 'phone', type: 'tel', label: 'Phone' }
];

const form  = new FormBuilder(fields)
---

<Layout title="Dashboard">
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
    <div class="bg-white p-6 rounded-lg shadow">
      <h3 class="text-gray-500 text-sm mb-2">Total Users</h3>
      <div class="flex items-end gap-2">
        <span class="text-2xl font-semibold">1,274</span>
        <span class="text-green-500 text-sm">+12% from last month</span>
      </div>
    </div>
    <div class="bg-white p-6 rounded-lg shadow">
      <h3 class="text-gray-500 text-sm mb-2">Active Users</h3>
      <div class="flex items-end gap-2">
        <span class="text-2xl font-semibold">834</span>
        <span class="text-green-500 text-sm">+7% from last month</span>
      </div>
    </div>
    <div class="bg-white p-6 rounded-lg shadow">
      <h3 class="text-gray-500 text-sm mb-2">Conversion Rate</h3>
      <div class="flex items-end gap-2">
        <span class="text-2xl font-semibold">4.3%</span>
        <span class="text-green-500 text-sm">+0.5% from last month</span>
      </div>
    </div>
    <div class="bg-white p-6 rounded-lg shadow">
      <h3 class="text-gray-500 text-sm mb-2">Revenue</h3>
      <div class="flex items-end gap-2">
        <span class="text-2xl font-semibold">$24,765</span>
        <span class="text-green-500 text-sm">+18% from last month</span>
      </div>
    </div>
  </div>

  <div class="bg-white rounded-lg shadow">
    <div class="p-6">
      <div class="flex justify-between items-center mb-4">
        <h2 class="text-lg font-semibold">Users Overview</h2>
        <form class="flex gap-2" method="get">
          <input 
            type="text" 
            name="search" 
            value={search}
            placeholder="Search by email..." 
            class="px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
          />
          <input type="hidden" name="start" value="0" />
          <button 
            type="submit"
            class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700"
          >
            Search
          </button>
        </form>
      </div>
      <div class="overflow-x-auto">
        <table class="w-full whitespace-nowrap">
          <thead>
            <tr class="border-b border-gray-200">
              {fields.map(field => (
                <th class="text-left py-3 px-4">{field.label}</th>
              ))}
              <th class="text-right py-3 px-4">Actions</th>
            </tr>
          </thead>
          <tbody>
            {users.map(user => (
              <tr class="border-b border-gray-200">
                {fields.map(field => {
                  const value = field.name.split('.').reduce((obj, key) => obj?.[key], user);
                  return (
                    <td  
                      class="py-3 px-4" 
                      data-field={field.name}
                      data-type={field.type}
                      data-required={field.required}
                      data-readonly={field.readonly}
                    >
                      {value}
                    </td>
                  );
                })}
                <td class="py-3 px-4 text-right">
                  <button
                    onclick={`document.getElementById('editModal${user.id}').showModal()`}
                    class="px-3 py-1 text-blue-600 hover:bg-blue-50 rounded-md mr-2"
                  >
                    Edit
                  </button>
                  <button
                    onclick={`document.getElementById('deleteModal${user.id}').showModal()`}
                    class="px-3 py-1 text-red-600 hover:bg-red-50 rounded-md"
                  >
                    Delete
                  </button>

                  {/* Edit Modal */}
                  <dialog id={`editModal${user.id}`} class="p-0 rounded-lg shadow-xl backdrop:bg-gray-500/50 w-[60vw] max-w-4xl">
                    <div class="w-full">
                      <div class="flex justify-between items-center p-4 border-b">
                        <h3 class="text-lg font-semibold">Edit User</h3>
                        <button onclick={`document.getElementById('editModal${user.id}').close()`} class="text-gray-500 hover:text-gray-700">
                          ✕
                        </button>
                      </div>
                      <form method="POST" action={actions.save} class="p-6">
                        <input type="hidden" name="action" value="update" />
                        <div class="space-y-4">
                        <Fragment set:html={ form.getHtml(user) } /> 
                        </div>
                        <div class="mt-6 flex justify-end gap-3">
                          <button 
                            type="button" 
                            onclick={`document.getElementById('editModal${user.id}').close()`}
                            class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50"
                          >
                            Cancel
                          </button>
                          <button 
                            type="submit"
                            class="px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md shadow-sm hover:bg-blue-700"
                          >
                            Save Changes
                          </button>
                        </div>
                      </form>
                    </div>
                  </dialog>

                  {/* Delete Modal */}
                  <dialog id={`deleteModal${user.id}`} class="p-0 rounded-lg shadow-xl backdrop:bg-gray-500/50">
                    <div class="w-full max-w-md">
                      <div class="flex justify-between items-center p-4 border-b">
                        <h3 class="text-lg font-semibold">Confirm Delete</h3>
                        <button onclick={`document.getElementById('deleteModal${user.id}').close()`} class="text-gray-500 hover:text-gray-700">
                          ✕
                        </button>
                      </div>
                      <div class="p-4">
                        <p class="text-gray-600">Are you sure you want to delete this user? This action cannot be undone.</p>
                        <form method="POST" class="mt-6 flex justify-end gap-3">
                          <input type="hidden" name="action" value="delete" />
                          <input type="hidden" name="id" value={user.id} />
                          <button 
                            type="button" 
                            onclick={`document.getElementById('deleteModal${user.id}').close()`}
                            class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50"
                          >
                            Cancel
                          </button>
                          <button 
                            type="submit"
                            class="px-4 py-2 text-sm font-medium text-white bg-red-600 border border-transparent rounded-md shadow-sm hover:bg-red-700"
                          >
                            Delete
                          </button>
                        </form>
                      </div>
                    </div>
                  </dialog>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
        <div class="flex justify-between mt-4">
          <a 
            href={`/?start=${prevStart}${search ? `&search=${search}` : ''}`}
            class={`px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 ${start === 0 ? 'opacity-50 pointer-events-none' : ''}`}
          >
            Previous
          </a>
          <a 
            href={`/?start=${nextStart}${search ? `&search=${search}` : ''}`}
            class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700"
          >
            Next
          </a>
        </div>
      </div>
    </div>
  </div>
</Layout>

<style>
  dialog::backdrop {
    background-color: rgba(0, 0, 0, 0.5);
  }
</style>