---
import { AstroRequest } from "@/services/RequestService";
import Layout from "@/layout/Public.astro";

// Check if user is already authenticated on server side
const token = Astro.cookies.get('auth-token')?.value;
const request = new AstroRequest(Astro); 

if(request.query?.action === 'logout'){
  Astro.cookies.delete('auth-token', { path:'/' });   
}
---
<Layout title="Dynamic page"> 
 <div class="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
      <div class="max-w-md w-full space-y-8">
        <div>
          <h2 class="mt-6 text-center text-3xl font-extrabold text-gray-900">
            Sign in to your account
          </h2>
          <p class="mt-2 text-center text-sm text-gray-600">
            Enter your credentials to access the admin dashboard
          </p>
        </div>
        
        <div 
          x-data="login"
          class="mt-8 space-y-6"
        >
          <div 
            x-show="error" 
            x-transition
            class="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded relative"
          >
            <span x-text="error"></span>
          </div>
          
          <div 
            x-show="success" 
            x-transition
            class="bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded relative"
          >
            Login successful! Redirecting...
          </div>

          <form @submit="submitForm" class="space-y-6">
            <div class="space-y-4">
              <div>
                <label for="email" class="block text-sm font-medium text-gray-700">
                  Email address
                </label>
                <input
                  id="email"
                  name="email"
                  type="email"
                  autocomplete="email"
                  required
                  class="mt-1 appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm"
                  placeholder="Enter your email"
                  value="admin@example.com"
                />
              </div>
              
              <div>
                <label for="password" class="block text-sm font-medium text-gray-700">
                  Password
                </label>
                <input
                  id="password"
                  name="password"
                  type="password"
                  autocomplete="current-password"
                  required
                  class="mt-1 appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm"
                  placeholder="Enter your password"
                  value="password123"
                />
              </div>
            </div>

            <div class="flex items-center justify-between">
              <div class="flex items-center">
                <input
                  id="remember-me"
                  name="remember-me"
                  type="checkbox"
                  class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
                />
                <label for="remember-me" class="ml-2 block text-sm text-gray-900">
                  Remember me
                </label>
              </div>

              <div class="text-sm">
                <a href="#" class="font-medium text-blue-600 hover:text-blue-500">
                  Forgot your password?
                </a>
              </div>
            </div>

            <div>
              <button
                type="submit"
                :disabled="loading"
                class="group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed"
              >
                <span x-show="!loading">Sign in</span>
                <span x-show="loading" class="flex items-center">
                  <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                    <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                  </svg>
                  Signing in...
                </span>
              </button>
            </div>
          </form>

          <div class="mt-6">
            <div class="text-center text-sm text-gray-600">
              <p>Demo credentials:</p>
              <p class="font-mono text-xs mt-1">
                Email: admin@example.com<br>
                Password: password123
              </p>
              <a href="/" class="btn btn-link">< Home</a>
            </div>
 
          </div>
 
        </form>
  
      </div>
    </div>

    <script is:inline>
        document.addEventListener('alpine:init', () => {
            Alpine.data('login', () => ({ 
                loading: false, 
                error: '', 
                success: false,
                async submitForm(event) {
                    event.preventDefault();
                    this.loading = true;
                    this.error = '';
                    
                    const formData = new FormData(event.target);
                    
                    try {
                        const response = await fetch('/api/auth/login', {
                            method: 'POST',
                            body: formData
                        });
                        
                        const result = await response.json();
                        
                        if (response.ok) {
                            this.success = true;
                            // Store token in cookie
                            // document.cookie = `auth-token=${result.token}; path=/; max-age=${24 * 60 * 60}; secure; samesite=strict`;
                            setTimeout(() => {
                            window.location.href = '/dash';
                            }, 1000);
                        } else {
                            this.error = result.error || 'Login failed';
                        }
                    } catch (err) {
                        this.error = 'Network error. Please try again.';
                    } finally {
                        this.loading = false;
                    }
                }
            }))
        }) 
    </script>
</Layout>